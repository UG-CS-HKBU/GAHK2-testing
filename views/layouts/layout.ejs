<!DOCTYPE html>
<html>

<head>
  <title>GAHK Scoring System</title>

  <!-- Required meta tags -->
  <meta charset="utf-8">

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">


  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
    integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
  <style>
    .class3 {
      background-color: rgb(243, 243, 243)
    }

    .search {
      padding: 10px 10px 10px 10px;
    }
  </style>
  <link rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.css"
    integrity="sha256-9w7XtQnqRDvThmsQHfLmXdDbGasYsSjF6FSXrDh7F6g=" crossorigin="anonymous" />
</head>

<body>

  <div class="container">
    <%  if (req.session.role != undefined) {%>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">



      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup"
        aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav">


          <%  if (req.session.role == "admin") {%>
          <a class="nav-item nav-link" href="http://localhost:1337/competition/homepage#">Home</a>
          <a class="nav-item nav-link" href="http://localhost:1337/competition/ranking#">Ranking</a>
          <%} %>

          <%  if (req.session.role == "secretary") {%>
          <a class="nav-item nav-link" href="http://localhost:1337/competition/homepageS#">Home</a>
          <%} %>

         
          <%  if (req.session.role == "chiefJudge") {%>
            <a class="nav-item nav-link" href="http://localhost:1337/competition/homepageCJ#">Home</a>
            <a class="nav-item nav-link" href="http://localhost:1337/competition/ranking#">Ranking</a>
          <%} %>


        </div>

      </div>

      <div style="text-align:right">
        <%  if (req.session.role != undefined) {%>
        Hi,
        <%=req.session.username %>.
        <a href="/user/logout">(Logout)</a>
        <%} else{%>
        <a href="/user/login">(Login)</a>
      </div>
      <%} %>



    </nav>


    <%}%>

    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->

    <!--TEMPLATES END-->


    <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/dependencies/sails.io.js"></script>
    <!--SCRIPTS END-->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.js"
      integrity="sha256-ncetQ5WcFxZU3YIwggfwOwmewLVX4SHLBtDYnrsxooY=" crossorigin="anonymous"></script>
    <script>
      $('.datepicker').datepicker();

      <% if (req.path == '/competition/waiting') {%>
        /*io.socket.get('/api/chat-conversation-count', function (data, jwr) {

          if (jwr.error) {
              console.error('Could not subscribe:' + jwr.error);
              return;
          }
          console.log('Successfully subscribed.');


        });
        io.socket.on('start', function test(resp) {
          console.log('Switch.');
          if (req.path.includes('updateE1')) {
            window.location = "/competition/updateE1/"+resp.id;
          }
          if (req.path.includes('updateD1')) {
            window.location = "/competition/updateD1/"+resp.id;
          }
        });*/
        <% } %>
    </script>
</body>

</html>